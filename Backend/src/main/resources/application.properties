supabase.issuer=${SUPABASE_ISSUER}

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.hikari.data-source-properties.prepareThreshold=0
spring.datasource.hikari.data-source-properties.preferQueryMode=simple

influx.url=${INFLUX_URL}
influx.token=${INFLUX_TOKEN}
influx.org=${INFLUX_ORG}
influx.database=datos_agua

spring.ai.openai.api-key=${GROQ_API_KEY}
spring.ai.openai.base-url=https://api.groq.com/openai
spring.ai.openai.chat.model=openai/gpt-oss-20b

# Auto-resoluci?n de alertas (minutos que una alerta puede estar activa antes de desactivarse autom?ticamente)
alerts.auto-resolve-minutes=120
# Frecuencia del chequeo de auto-resoluci?n en ms (por defecto 1 minuto)
alerts.auto-resolve-check-ms=60000

# Configuración IA (scheduler y ventana de datos recientes)
ai.check.rate-ms=60000
ai.check.initial-delay-ms=10000
ai.recent.minutes=5

# JPA: evitar mantener la sesión abierta hasta la vista (reduce riesgo de conexiones retenidas)
spring.jpa.open-in-view=false

# HikariCP: ajustar pool y tiempos para liberar conexiones
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=120000 
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.keepalive-time=300000
spring.datasource.hikari.leak-detection-threshold=20000
